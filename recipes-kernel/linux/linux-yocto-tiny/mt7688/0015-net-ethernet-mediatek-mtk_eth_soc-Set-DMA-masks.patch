From 6cabbd344eed474b42b403a257259e173473d791 Mon Sep 17 00:00:00 2001
From: Stefan Roese <sr@denx.de>
Date: Mon, 3 Dec 2018 10:54:57 +0100
Subject: [PATCH] net: ethernet: mediatek: mtk_eth_soc: Set DMA masks

Without setting the DMA masks, the DMA subsystem complains and xfer
does not work correctly. So lets set the DMA masks in the probe
function.

Additionally the patch fixes some compile warnings.

Signed-off-by: Stefan Roese <sr@denx.de>
---
 drivers/net/ethernet/mediatek/mtk_eth_soc.c | 19 ++++++++++++++++++-
 drivers/net/ethernet/mediatek/mtk_eth_soc.h |  3 ++-
 2 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/mediatek/mtk_eth_soc.c b/drivers/net/ethernet/mediatek/mtk_eth_soc.c
index e68ca204ed9e..8deebb0f87c0 100644
--- a/drivers/net/ethernet/mediatek/mtk_eth_soc.c
+++ b/drivers/net/ethernet/mediatek/mtk_eth_soc.c
@@ -1530,7 +1530,11 @@ static int fe_probe(struct platform_device *pdev)
 	struct clk *sysclk;
 	int err, napi_weight;
 
-	device_reset(&pdev->dev);
+	err = device_reset(&pdev->dev);
+	if (err) {
+		dev_err(&pdev->dev, "device_reset failed (%d)!\n", err);
+		return err;
+	}
 
 	match = of_match_device(of_fe_match, &pdev->dev);
 	soc = (struct fe_soc_data *)match->data;
@@ -1623,6 +1627,19 @@ static int fe_probe(struct platform_device *pdev)
 	netif_napi_add(netdev, &priv->rx_napi, fe_poll, napi_weight);
 	fe_set_ethtool_ops(netdev);
 
+	/* Init DMA mask */
+	netdev->dev.dma_mask = &netdev->dev.coherent_dma_mask;
+	err = dma_set_mask(&netdev->dev, DMA_BIT_MASK(32));
+	if (err) {
+		dev_err(&pdev->dev, "error setting DMA mask\n");
+		goto err_free_dev;
+	}
+	err = dma_set_coherent_mask(&netdev->dev, DMA_BIT_MASK(32));
+	if (err) {
+		dev_err(&pdev->dev, "error setting coherent DMA mask\n");
+		goto err_free_dev;
+	}
+
 	err = register_netdev(netdev);
 	if (err) {
 		dev_err(&pdev->dev, "error bringing up device\n");
diff --git a/drivers/net/ethernet/mediatek/mtk_eth_soc.h b/drivers/net/ethernet/mediatek/mtk_eth_soc.h
index 517d8ba4dc4b..7200a6b0287a 100644
--- a/drivers/net/ethernet/mediatek/mtk_eth_soc.h
+++ b/drivers/net/ethernet/mediatek/mtk_eth_soc.h
@@ -521,12 +521,13 @@ static inline void *priv_netdev(struct fe_priv *priv)
 
 int mtk_ppe_probe(struct fe_priv *eth);
 void mtk_ppe_remove(struct fe_priv *eth);
+#ifdef CONFIG_NET_MEDIATEK_OFFLOAD
 int mtk_flow_offload(struct fe_priv *eth,
 		     enum flow_offload_type type,
 		     struct flow_offload *flow,
 		     struct flow_offload_hw_path *src,
 		     struct flow_offload_hw_path *dest);
 int mtk_offload_check_rx(struct fe_priv *eth, struct sk_buff *skb, u32 rxd4);
-
+#endif
 
 #endif /* FE_ETH_H */
