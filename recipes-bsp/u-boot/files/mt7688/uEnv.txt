# Default variables
## Never-changing variables, might go into the U-Boot default environment
bootslot=0

## Board Revision dependent
board_revision=1.0

# Custom commands required for development
do_dev_u_boot_upgrade=dhcp u-boot.bin-rom && mtd erase nor0 0 a0000 && mtd write nor0 ${fileaddr} 0 ${filesize} && reset
do_dev_import_default_env=dhcp uEnv.txt && env import -t ${loadaddr} ${filesize}

# Custom commands required for production and regular startup
do_toggle_bootslot=if test ${bootslot} -eq 0; then setenv bootslot 1; else setenv bootslot 0;fi;
do_update_u_boot_version=if test "${ver}" != "${u_boot_version}"; then echo "Persisting new U-Boot version" && setenv u_boot_version "${ver}" && saveenv; fi
do_set_bootargs=setenv bootargs console=ttyS0,${baudrate} root=/dev/ubiblock0_${bootslot} rootrw=ubi0:overlay rootrwfstype=ubifs rootrwoptions=rw,noatime ubi.block=0,rootfs${bootslot} ubi.mtd=nand init=/init mtdparts="spi0.0:640k(uboot),64k(uboot_env0),64k(uboot_env1),-(factory);gd5f:-(nand)"
do_set_leds=run do_led_all_off; run do_led_power_green
do_ubi_setup=if test ${ubi_setup_done} -ne 1; then mtd erase spi-nand0; ubi part nand && ubi create rootfs0 0x2815000 static 0 && ubi create rootfs1 0x2815000 static 1 && ubi create kernel0 0x41e000 static 2 && ubi create kernel1 0x41e000 static 3 && ubi create overlay 0x1e00000 dynamic 4 && setenv ubi_setup_done 1; else ubi part nand; fi
do_flashing_inplace=dhcp uImage.lzma && echo "Writing to kernel${bootslot}" && ubi write ${fileaddr} kernel${bootslot} ${filesize} && dhcp gardena-image-prod-mt7688.squashfs-xz && echo "Writing to rootfs${bootslot}" && ubi write ${fileaddr} rootfs${bootslot} ${filesize}
do_flashing_setup=if test ${flashing_done} -ne 1; then run do_toggle_bootslot && run do_flashing_inplace && setenv flashing_done 1 && saveenv && reset; fi
do_boot_from_flash=ubi read 80a00000 kernel${bootslot} && bootm 80a00000

## LED handling
do_led_set_state=for color in blue green red; do led smartgw:${led_name}:${color} ${led_state}; done
do_led_off=led_state=off; run do_led_set_state
do_led_on=led_state=on; run do_led_set_state

do_led_all_set_state=for led_name in power internet; do run do_led_set_state; done
do_led_all_off=led_state=off; run do_led_all_set_state
do_led_all_on=led_state=on; run do_led_all_set_state

do_led_power_off=led_name=power; run do_led_off
do_led_power_red=run do_led_power_off; led smartgw:${led_name}:red on
do_led_power_green=run do_led_power_off; led smartgw:${led_name}:green on
do_led_power_blue=run do_led_power_off; led smartgw:${led_name}:blue on
do_led_power_blue=led_name=power; led_state=on; run do_led_set_state

## Relevant for startup
bootcmd=run do_set_leds; run do_update_u_boot_version; run do_ubi_setup; run do_flashing_setup; run do_set_bootargs; run do_boot_from_flash
